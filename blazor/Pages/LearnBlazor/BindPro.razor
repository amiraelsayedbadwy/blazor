@page "/LearnBlazor/BindPro"
<div class="row">
    <h3 class="text-success">Individual Products</h3>
    <div class=" col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3><hr />
        <div>
            Active:
            <input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive?"checked":null)" />
        </div>
        <br />
        <div>
            price:
            <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" />
            <br />
        </div>
        <div>
            Product Proprties:
            <select @bind="selectedProp">
                @foreach (var item in Product.ProductProperties)
                {
                    <option value="@item.Key">@item.Key</option>
                }
            </select>
        </div>
    </div>
    <div class=" col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3><hr />
        Name: @Product.Name
        <br />
        Active: true
        <br />
        price: @Product.Price
        <br />
        this product is: @(Product.IsActive?"Active":"InActive")
        <br />
        property selected : @selectedProp
        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p> Property value :@Product.ProductProperties.FirstOrDefault(u => u.Key == selectedProp).Value</p>
        }
        <br />
    </div>
    <br />

    <div class="col-12">
        <h2 class="text-success"> Product Table</h2>
        <table>
            <tbody>
                @foreach (var prod in Products)
                {
                    <tr>
                        <td>
                            <input type="text" @bind-value="prod.Name" @bind-value:event="oninput" />
                        </td>
                        <td>
                            <input type="number" @bind-value="prod.Price" @bind-value:event="oninput" />
                        </td>
                        <td>
                            <input @bind-value="prod.IsActive" checked="@(prod.IsActive?"checked":null)" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <h2>Product Summary</h2>
        @foreach (var prod in Products)
        {
            <p>@prod.Name [@prod.Price] is @(prod.IsActive?"Active":"InActive")</p>
        }
    </div>
</div>

@code {
    private string selectedProp = "";
    Demo_Product Product = new()
    {
        Id = 1,
        Name = "Rose",
        IsActive = true,
        Price = 10.99,
        ProductProperties = new List<Demo_ProductProp>()
{
            new Demo_ProductProp{Id =1, Key="color", Value="Black"},
            new Demo_ProductProp{Id =2, Key="Flavor", Value="Rose jasmine"},
            new Demo_ProductProp{Id =3, Key="size", Value="20oz"}
        }
    };
    List<Demo_Product> Products = new();
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Products.Add(new()
        {
            Id = 1,
            Name = "Rose",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new List<Demo_ProductProp>()
{
            new Demo_ProductProp{Id =1, Key="color", Value="Black"},
            new Demo_ProductProp{Id =2, Key="Flavor", Value="Rose jasmine"},
            new Demo_ProductProp{Id =3, Key="size", Value="20oz"}
          }
        });
        Products.Add(new()
        {
            Id = 2,
            Name = "Blossm lily",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new List<Demo_ProductProp>()
{
            new Demo_ProductProp{Id =1, Key="color", Value="white"},
            new Demo_ProductProp{Id =2, Key="Flavor", Value="Lily"},
            new Demo_ProductProp{Id =3, Key="size", Value="18oz"}
          }
        });

    }

}

