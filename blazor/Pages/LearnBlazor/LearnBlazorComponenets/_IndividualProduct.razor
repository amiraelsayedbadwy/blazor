
<div class="bg-light border p-2 col-5" @onclick="(args)=>SelectedProductUpdated(args,Product.Name)">

    <h4 class="text-secondary"> Product - @Product.Id</h4>
    Name - @Product.Name<br />
    <p>RF from parent - @FirstFragment @SecondFragment</p>
    <input type="checkbox" @onchange="FavouriteUpdated" /> Add to Favourite<br />
    <p>Name - @Product.Name</p><br />
    show properties : <input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive?"checked":null)" />
    @if (Product.IsActive)
    {
        @foreach (var prodPro in Product.ProductProperties)
        {
            <p>@prodPro.Key - @prodPro.Value</p>
        }
    }
    <br />
    @*shared commpnent*@
    <_EditDeleteButton IsActive="@Product.IsActive" />
</div>
@code {
    [Parameter]
    public Demo_Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavouriteUpdated { get; set; }

    [Parameter]
    public EventCallback<string> OnLastSelectedProductChange { get; set; }
    [Parameter]
    public RenderFragment FirstFragment { get; set; }

    [Parameter]
    public RenderFragment SecondFragment { get; set; }

    private async Task FavouriteUpdated(ChangeEventArgs e)
    {
        await OnFavouriteUpdated.InvokeAsync((bool)e.Value);
    }
    private async Task SelectedProductUpdated(MouseEventArgs e, string selected)
    {
        await OnLastSelectedProductChange.InvokeAsync(selected);
    }
}

